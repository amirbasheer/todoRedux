{"version":3,"sources":["redux/todo/action.js","redux/todo/reducer.js","redux/reducers.js","redux/todo/fireStore.js","redux/todo/saga.js","redux/sagas.js","redux/store.js","component/todo.js","App.js","serviceWorker.js","index.js"],"names":["actions","FETCH_DATA","FETCH_DATA_SUCCESS","ADD_DATA","EDIT_DATA","UPDATE_DATA","DELETE_DATA","fetchData","type","onFetchDataSuccess","result","addData","data","status","payload","editData","id","value","updateData","deleteData","initState","reducers","TodoReducer","state","arguments","length","undefined","action","Object","objectSpread","fireBase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rootSaga","db","firestore","arrData","regenerator_default","a","wrap","_context","prev","next","call","onRetriveData","put","stop","_marked","this","_ref","asyncToGenerator","mark","_callee","_context2","collection","get","then","querySnapshot","forEach","doc","push","apply","onAddData","add","task","docRef","update","catch","error","console","_ref2","_context3","delay","_marked2","onDeleteData","delete","_ref3","_context4","_marked3","onUpdateData","s","_ref4","_context5","_marked4","onEditData","_ref5","_context6","_marked5","_context7","all","takeEvery","_marked6","getState","todoSagas","sagas_marked","sagaMiddleware","creataSagaMiddleware","middlewares","store","createStore","combineReducers","compose","applyMiddleware","run","customStyles","content","top","left","right","bottom","marginRight","transform","Todo","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateStatus","updateTask","closeModal","deleteTask","onTextChange","e","setState","target","_x","modalIsOpen","addTask","bind","assertThisInitialized","openModal","afterOpenModal","v","i","alert","_this2","TodoResult","map","val","react_default","createElement","className","aria-hidden","onClick","style","color","marginTop","placeholder","onChange","padding","marginBottom","marginLeft","lib_default","isOpen","onAfterOpen","contentLabel","float","Component","connect","App","es","todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSAAMA,EAAU,CACZC,WAAY,aACZC,mBAAoB,qBACpBC,SAAU,WACVC,UAAW,YACXC,YAAa,cACbC,YAAa,cAEbC,UAAW,iBAAM,CACbC,KAAMR,EAAQC,aAElBQ,mBAAoB,SAACC,GAAD,MAAY,CAC5BF,KAAMR,EAAQE,mBACdQ,WAEJC,QAAS,SAACC,EAAKC,GAAN,MAAiB,CACtBL,KAAMR,EAAQG,SACdW,QAAS,CAAEF,OAAKC,YAEpBE,SAAU,SAACC,EAAGC,GAAJ,MAAc,CACpBT,KAAMR,EAAQI,UACdU,QAAS,CAAEE,KAAGC,WAElBC,WAAY,SAACF,EAAGH,GAAJ,MAAe,CACvBL,KAAMR,EAAQK,YACdS,QAAS,CAAEE,KAAGH,YAElBM,WAAY,SAACH,GAAD,MAAQ,CAChBR,KAAMR,EAAQM,YACdQ,QAAS,CAAEE,SAGJhB,IC9BToB,EAAY,CACdV,OAAQ,GACRO,MAAM,GACND,GAAG,GACHH,OAAO,ICJI,IAAAQ,EAAA,CACXC,YDMW,WAA4C,IAA3BC,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnBJ,EAAWO,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQC,EAAOnB,MACX,KAAKR,EAAQC,WACT,OAAO2B,OAAAC,EAAA,EAAAD,CAAA,GACAL,GAEP,KAAKvB,EAAQE,mBACb,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIb,OAAQiB,EAAOjB,SAEvB,KAAKV,EAAQG,SAMb,KAAKH,EAAQI,UAMb,KAAKJ,EAAQK,YAMb,KAAKL,EAAQM,YACT,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACAL,GAGX,QACI,OAAOA,4CE/BJO,SADCC,EAASC,cARZ,CACTC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,4BCFb/B,cA0CAI,cAwBAQ,cA2BAD,cAuBAH,cAiBewB,GAxIrBC,EAAKV,EAASW,YACdC,EAAU,GAEd,SAAUnC,IAAV,OAAAoC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OADJF,EAAAE,KAAA,EACUC,YAAKC,GADf,WAGOR,EAHP,CAAAI,EAAAE,KAAA,QAIQ,OAJRF,EAAAE,KAAA,EAIcG,YACFnD,EAAQS,mBACJiC,IANhB,wBAAAI,EAAAM,SAAAC,EAAAC,MAaA,IAAMJ,EAAa,eAAAK,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAe,EAAAC,EAAAa,KAAG,SAAAC,IAAA,IAAA9C,EAAA,OAAA+B,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cACdpC,EAAQ,GACZ8B,EAAU,GAFQiB,EAAAX,KAAA,EAGZR,EAAGoB,WAAW,QAAQC,MACvBC,KAAK,SAAAC,GACFA,EAAcC,QAAQ,SAACC,GACnBrD,EAAKsD,KAAKD,EAAIrD,YANR,OASlB8B,EAAU9B,EATQ,wBAAA+C,EAAAP,SAAAM,EAAAJ,SAAH,yBAAAC,EAAAY,MAAAb,KAAA9B,YAAA,GAab4C,EAAY,SAACxD,EAAKC,GACpB2B,EAAGoB,WAAW,QAAQS,IAAI,CACtBC,KAAM1D,EACNC,OAAQA,IAEXiD,KAAK,SAACS,GACE/B,EAAGoB,WAAW,QAAQK,IAAIM,EAAOvD,IAAIwD,OAAO,CACzCxD,GAAIuD,EAAOvD,OAGlByD,MAAM,SAASC,GACZC,QAAQD,MAAM,0BAA2BA,MAKrD,SAAU/D,EAAViE,GAAA,IAAA9D,EAAAF,EAAAC,EAAA,OAAA8B,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAGI,OAHelC,EAAnB8D,EAAmB9D,QACPF,EAAgBE,EAAhBF,KAAKC,EAAWC,EAAXD,OADjBgE,EAAA7B,KAAA,EAGUC,YAAKmB,EAAYxD,EAAMC,GAHjC,OAII,OAJJgE,EAAA7B,KAAA,EAIU8B,YAAM,KAJhB,OAKI,OALJD,EAAA7B,KAAA,EAKUC,YAAKC,GALf,WAOOR,EAPP,CAAAmC,EAAA7B,KAAA,SAQQ,OARR6B,EAAA7B,KAAA,GAQcG,YACNnD,EAAQS,mBACJiC,IAVZ,yBAAAmC,EAAAzB,SAAA2B,EAAAzB,MAgBA,IAAM0B,EAAe,SAAChE,GAClBwB,EAAGoB,WAAW,QAAQK,IAAIjD,GAAIiE,SAASnB,KAAK,cAEzCW,MAAM,SAASC,GACdC,QAAQD,MAAM,4BAA6BA,MAInD,SAAUvD,EAAV+D,GAAA,IAAApE,EAAAE,EAAA,OAAA2B,EAAAC,EAAAC,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAGI,OAHkBlC,EAAtBoE,EAAsBpE,QACVE,EAAOF,EAAPE,GADZmE,EAAAnC,KAAA,EAGUC,YAAK+B,EAAehE,GAH9B,OAII,OAJJmE,EAAAnC,KAAA,EAIUC,YAAKC,GAJf,WAMOR,EANP,CAAAyC,EAAAnC,KAAA,QAOQ,OAPRmC,EAAAnC,KAAA,EAOcG,YACNnD,EAAQS,mBACJiC,IATZ,wBAAAyC,EAAA/B,SAAAgC,EAAA9B,MAeA,IAAM+B,EAAe,SAACrE,EAAIH,GACtB,IAAIyE,EAAe,KAAVzE,EAAgB,IAAM,IAE/B2B,EAAGoB,WAAW,QAAQK,IAAIjD,GACrBwD,OAAO,CAAC3D,OAAOyE,IAAIxB,KAAK,cAE1BW,MAAM,SAAUC,GACfC,QAAQD,MAAM,4BAA6BA,KAE/CY,EAAI,IAGR,SAAUpE,EAAVqE,GAAA,IAAAzE,EAAAE,EAAAH,EAAA,OAAA8B,EAAAC,EAAAC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAGI,OAHkBlC,EAAtByE,EAAsBzE,QACVE,EAAeF,EAAfE,GAAIH,EAAWC,EAAXD,OADhB2E,EAAAxC,KAAA,EAGUC,YAAKoC,EAAerE,EAAKH,GAHnC,OAII,OAJJ2E,EAAAxC,KAAA,EAIUC,YAAKC,GAJf,WAMOR,EANP,CAAA8C,EAAAxC,KAAA,QAOQ,OAPRwC,EAAAxC,KAAA,EAOcG,YACFnD,EAAQS,mBACJiC,IAThB,wBAAA8C,EAAApC,SAAAqC,EAAAnC,MAcA,IAAMoC,EAAa,SAAC1E,EAAIC,GACpBuB,EAAGoB,WAAW,QAAQK,IAAIjD,GACrBwD,OAAO,CAACF,KAAKrD,IAAQ6C,KAAK,cAE5BW,MAAM,SAAUC,GACfC,QAAQD,MAAM,4BAA6BA,MAInD,SAAU3D,EAAV4E,GAAA,IAAA7E,EAAAE,EAAAC,EAAA,OAAA0B,EAAAC,EAAAC,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAKI,OALgBlC,EAApB6E,EAAoB7E,QACRE,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MADhB2E,EAAA5C,KAAA,EAKUC,YAAKyC,EAAa1E,EAAKC,GALjC,OAMI,OANJ2E,EAAA5C,KAAA,EAMUC,YAAKC,GANf,WAQOR,EARP,CAAAkD,EAAA5C,KAAA,QASQ,OATR4C,EAAA5C,KAAA,EAScG,YACFnD,EAAQS,mBACJiC,IAXhB,wBAAAkD,EAAAxC,SAAAyC,EAAAvC,MAiBe,SAAUf,IAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OACX,OADW8C,EAAA9C,KAAA,EACL+C,YAAI,CAACC,YAAUhG,EAAQC,WAAYM,KAD9B,OAEX,OAFWuF,EAAA9C,KAAA,EAEL+C,YAAI,CAACC,YAAUhG,EAAQG,SAAUQ,KAF5B,OAGX,OAHWmF,EAAA9C,KAAA,EAGL+C,YAAI,CAACC,YAAUhG,EAAQM,YAAaa,KAH/B,OAIX,OAJW2E,EAAA9C,KAAA,EAIL+C,YAAI,CAACC,YAAUhG,EAAQK,YAAaa,KAJ/B,OAKX,OALW4E,EAAA9C,KAAA,GAKL+C,YAAI,CAACC,YAAUhG,EAAQI,UAAWW,KAL7B,yBAAA+E,EAAA1C,SAAA6C,EAAA3C,qBCzIUf,GAAV,SAAUA,EAAS2D,GAAnB,OAAAvD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OADWF,EAAAE,KAAA,EACL+C,YAAI,CACNI,MAFO,wBAAArD,EAAAM,SAAAgD,EAAA9C,MCEf,IAAM+C,EAAkBC,cAClBC,EAAe,CAAEF,GAEjBG,EAAQC,YACVC,YAAgB9E,OAAAC,EAAA,EAAAD,CAAA,GACTP,IAEPsF,YAAQC,IAAezC,WAAf,EAAmBoC,KAE/BF,EAAeQ,IAAItE,+BCRXhC,EAAqDP,EAArDO,UAAUI,GAA2CX,EAA3CW,QAAQQ,GAAmCnB,EAAnCmB,WAAWD,GAAwBlB,EAAxBkB,WAAWH,GAAaf,EAAbe,SAE1C+F,GAAe,CACjBC,QAAU,CACNC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAK1BC,eACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0B,KAAAgE,IACfE,EAAA5F,OAAA8F,EAAA,EAAA9F,CAAA0B,KAAA1B,OAAA+F,EAAA,EAAA/F,CAAA0F,GAAArE,KAAAK,KAAMiE,KAwCVK,aAAe,SAAC5G,EAAGH,GACf2G,EAAKD,MAAMrG,WAAWF,EAAGH,IA1CV2G,EA4CnBK,WAAa,SAAC7G,EAAGC,GACbuG,EAAKD,MAAMxG,SAASC,EAAGC,GACvBuG,EAAKM,cA9CUN,EAgDnBO,WAAa,SAAC/G,GACVwG,EAAKD,MAAMpG,WAAWH,IAjDPwG,EA6DnBQ,aA7DmB,eAAAzE,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAe,EAAAC,EAAAa,KA6DJ,SAAAC,EAAOuE,GAAP,OAAAtF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLwE,EAAKU,SAAS,CAACjH,MAAMgH,EAAEE,OAAOlH,QADzB,wBAAA6B,EAAAM,SAAAM,EAAAJ,SA7DI,gBAAA8E,GAAA,OAAA7E,EAAAY,MAAAb,KAAA9B,YAAA,GAEfgG,EAAKjG,MAAQ,CACT8G,aAAa,EACb/D,KAAK,GACLtD,GAAG,GACHC,MAAM,IAEVuG,EAAKc,QAAUd,EAAKc,QAAQC,KAAb3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KACfA,EAAKQ,aAAeR,EAAKQ,aAAaO,KAAlB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KACpBA,EAAKO,WAAaP,EAAKO,WAAWQ,KAAhB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KAClBA,EAAKI,aAAeJ,EAAKI,aAAaW,KAAlB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KACpBA,EAAKK,WAAaL,EAAKK,WAAWU,KAAhB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KAClBA,EAAKiB,UAAYjB,EAAKiB,UAAUF,KAAf3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KACjBA,EAAKkB,eAAiBlB,EAAKkB,eAAeH,KAApB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KACtBA,EAAKM,WAAaN,EAAKM,WAAWS,KAAhB3G,OAAA4G,EAAA,EAAA5G,QAAA4G,EAAA,EAAA5G,CAAA4F,KAfHA,iHAkBHmB,EAAEC,mFACTtF,KAAK4E,SAAS,CAACG,aAAa,EAAK/D,KAAMqE,EAAE3H,GAAG4H,wLASjDtF,KAAK4E,SAAS,CAACG,aAAa,iDAI5B/E,KAAKiE,MAAMhH,8CAoBX,GAAwB,KAArB+C,KAAK/B,MAAMN,MAAc,CAExBqC,KAAKiE,MAAM5G,QAAQ2C,KAAK/B,MAAMN,MADjB,UAIb4H,MAAM,gBAEVvF,KAAK4E,SAAS,CAACjH,MAAM,sCAMZ,IAAA6H,EAAAxF,KAGH1C,EAFiB0C,KAAKiE,MAApBwB,WACArI,OACYsI,IAAI,SAACC,EAAIjI,GAC1B,OAAOkI,EAAAtG,EAAAuG,cAAA,UACa,KAAdF,EAAIpI,OACFqI,EAAAtG,EAAAuG,cAAA,UAAID,EAAAtG,EAAAuG,cAAA,KAAGC,UAAU,6BAA6BC,cAAY,OAAOC,QAAU,kBAAMR,EAAKlB,aAAaqB,EAAIjI,GAAGiI,EAAIpI,YAC9GqI,EAAAtG,EAAAuG,cAAA,UAAID,EAAAtG,EAAAuG,cAAA,KAAGC,UAAU,oCAAoCC,cAAY,OAAOC,QAAU,kBAAMR,EAAKlB,aAAaqB,EAAIjI,GAAGiI,EAAIpI,YAGzHqI,EAAAtG,EAAAuG,cAAA,cAAKD,EAAAtG,EAAAuG,cAAA,KAAGG,QAAU,kBAAMR,EAAKL,UAAUQ,EAAI3E,KAAK2E,EAAIjI,MAAoB,KAAdiI,EAAIpI,OAAgBqI,EAAAtG,EAAAuG,cAAA,SAAIF,EAAI3E,MAAY4E,EAAAtG,EAAAuG,cAAA,cAASF,EAAI3E,QAC/G4E,EAAAtG,EAAAuG,cAAA,UAAID,EAAAtG,EAAAuG,cAAA,KAAGI,MAAO,CAACC,MAAM,OAAQJ,UAAU,uBAAuBC,cAAY,OAAOC,QAAU,kBAAMR,EAAKf,WAAWkB,EAAIjI,WAGxH,OACIkI,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,aACXF,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,OACXF,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,aACXF,EAAAtG,EAAAuG,cAAA,yBAGRD,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,OACXF,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,YAAYG,MAAO,CAAEE,UAAW,SAC3CP,EAAAtG,EAAAuG,cAAA,SAAO3I,KAAK,OAAOkJ,YAAY,WAAWzI,MAAOqC,KAAK/B,MAAMN,MAAO0I,SAAU,SAAC1B,GAAD,OAAOa,EAAKd,aAAaC,MACtGiB,EAAAtG,EAAAuG,cAAA,UAAQI,MAAO,CAAEK,QAAS,UAAWC,aAAc,MAAOC,WAAY,QAASV,UAAU,kBAAkBE,QAAShG,KAAKgF,SAAzH,cAGRY,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,OACXF,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,wBACXF,EAAAtG,EAAAuG,cAAA,SAAOC,UAAU,qBACTF,EAAAtG,EAAAuG,cAAA,UACID,EAAAtG,EAAAuG,cAAA,WACAD,EAAAtG,EAAAuG,cAAA,mBACAD,EAAAtG,EAAAuG,cAAA,YAEPvI,KAIbsI,EAAAtG,EAAAuG,cAACY,EAAAnH,EAAD,CACIoH,OAAQ1G,KAAK/B,MAAM8G,YACnB4B,YAAa3G,KAAKoF,eAClBa,MAAOzC,GACPoD,aAAa,iBAEdhB,EAAAtG,EAAAuG,cAAA,KAAGI,MAAO,CAACY,MAAO,QAASV,UAAW,QAAQD,MAAM,OAAQJ,UAAU,uBAAuBC,cAAY,OAAOC,QAAShG,KAAKwE,aAC7HoB,EAAAtG,EAAAuG,cAAA,yBACID,EAAAtG,EAAAuG,cAAA,SAAO3I,KAAK,OAAOS,MAAOqC,KAAK/B,MAAM+C,KAAMqF,SAAW,SAAC1B,GAAD,OAAOa,EAAKZ,SAAS,CAAC5D,KAAK2D,EAAEE,OAAOlH,WAC1FiI,EAAAtG,EAAAuG,cAAA,UAAQI,MAAO,CAAEK,QAAS,UAAWE,WAAY,QAASV,UAAU,kBAAkBE,QAAU,kBAAMR,EAAKjB,WAAWiB,EAAKvH,MAAMP,GAAG8H,EAAKvH,MAAM+C,QAA/I,mBAlHT8F,aA4HJC,mBAHf,SAAyB9I,GACrB,MAAO,CAAEwH,WAAYxH,EAAMD,cAI3B,CAAEf,YAAUI,WAAQQ,cAAWD,cAAWH,aAF/BsJ,CAGb/C,IClIagD,2LAVX,OACEpB,EAAAtG,EAAAuG,cAAA,OAAKC,UAAU,OACXF,EAAAtG,EAAAuG,cAACoB,EAAA,EAAD,CAAU/D,MAAOA,GACb0C,EAAAtG,EAAAuG,cAACqB,GAAD,eALIJ,cCMEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAtG,EAAAuG,cAAC6B,GAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvH,KAAK,SAAAwH,GACjCA,EAAaC","file":"static/js/main.a9c55cc4.chunk.js","sourcesContent":["const actions = {\n    FETCH_DATA: 'FETCH_DATA',\n    FETCH_DATA_SUCCESS: 'FETCH_DATA_SUCCESS',\n    ADD_DATA: 'ADD_DATA',\n    EDIT_DATA: 'EDIT_DATA',\n    UPDATE_DATA: 'UPDATE_DATA',\n    DELETE_DATA: 'DELETE_DATA',\n\n    fetchData: ()=> ({\n        type: actions.FETCH_DATA,\n    }),\n    onFetchDataSuccess: (result)=> ({\n        type: actions.FETCH_DATA_SUCCESS,\n        result\n    }),\n    addData: (data,status)=> ({\n        type: actions.ADD_DATA,\n        payload: { data,status }\n    }),\n    editData: (id,value)=> ({\n        type: actions.EDIT_DATA,\n        payload: { id,value }\n    }),\n    updateData: (id,status)=> ({\n        type: actions.UPDATE_DATA,\n        payload: { id,status }\n    }),\n    deleteData: (id)=> ({\n        type: actions.DELETE_DATA,\n        payload: { id }\n    }),\n};\nexport default actions;","import actions from './action';\n\nconst initState = {\n    result: [],\n    value:'',\n    id:'',\n    status:'',\n};\n\nexport default function reducer(state = initState, action) {\n    switch (action.type) {\n        case actions.FETCH_DATA:\n            return {\n                ...state\n            };\n            case actions.FETCH_DATA_SUCCESS:\n            return {\n                ...state,\n                result: action.result\n            };\n        case actions.ADD_DATA:\n            return {\n                ...state,\n                // value: action.payload.data,\n                // status: action.payload.status\n            };\n        case actions.EDIT_DATA:\n            return {\n                ...state,\n                // id: action.payload.id,\n                // value: action.payload.value,\n            };\n        case actions.UPDATE_DATA:\n            return {\n                ...state,\n                // id: action.id,\n                // status: action.status,\n            };\n        case actions.DELETE_DATA:\n            return {\n                ...state,\n                // id: action.payload.id\n            };\n        default:\n            return state;\n    }\n\n}","import TodoReducer from '../redux/todo/reducer';\n\nexport default {\n    TodoReducer\n};","import React, {Component} from 'react';\n\nimport firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyD0KAgs5hHW2gzk7S7viAspK6mWtHUdCBI\",\n    authDomain: \"todoredux-93ab5.firebaseapp.com\",\n    databaseURL: \"https://todoredux-93ab5.firebaseio.com\",\n    projectId: \"todoredux-93ab5\",\n    storageBucket: \"todoredux-93ab5.appspot.com\",\n    messagingSenderId: \"350546454538\"\n};\nvar fireBase =  firebase.initializeApp(config);\nexport default fireBase;","import { all, takeEvery, put, call} from 'redux-saga/effects';\nimport { delay } from 'redux-saga'\nimport actions from './action';\nimport fireBase from '../todo/fireStore';\n\nvar db = fireBase.firestore();\nvar arrData = [];\n\nfunction* fetchData() {\n    yield call(onRetriveData);\n\n    if(arrData) {\n        yield put(\n            actions.onFetchDataSuccess(\n                arrData\n            )\n        );\n    }\n\n}\n\nconst onRetriveData = async () => {\n    var data  = [];\n    arrData = [];\n    await db.collection('todo').get()\n        .then(querySnapshot => {\n            querySnapshot.forEach((doc) =>  {\n                data.push(doc.data());\n            });\n        });\n    arrData = data;\n    // data = [];\n}\n\nconst onAddData = (data,status) => {\n    db.collection(\"todo\").add({\n        task: data,\n        status: status,\n    })\n    .then((docRef) => {\n             db.collection(\"todo\").doc(docRef.id).update({\n                id: docRef.id,\n            })\n        })\n        .catch(function(error) {\n            console.error(\"Error adding document: \", error);\n        });\n}\n\n\nfunction* addData({payload}) {\n    const { data,status } = payload;\n\n    yield call(onAddData , data, status)\n    yield delay(1000)\n    yield call(onRetriveData)\n\n    if(arrData) {\n        yield put(\n        actions.onFetchDataSuccess(\n            arrData\n            )\n        );\n    }\n}\n\nconst onDeleteData = (id) => {\n    db.collection(\"todo\").doc(id).delete().then(function() {\n\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n}\n\nfunction* deleteData({payload}) {\n    const { id } = payload;\n\n    yield call(onDeleteData , id);\n    yield call(onRetriveData);\n\n    if(arrData) {\n        yield put(\n        actions.onFetchDataSuccess(\n            arrData\n            )\n        );\n    }\n}\n\nconst onUpdateData = (id, status) => {\n    var s = (status == '1' ? '0' : '1' )\n\n    db.collection('todo').doc(id)\n        .update({status:s}).then(function () {\n\n    }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n    });\n    s = '';\n}\n\nfunction* updateData({payload}) {\n    const { id, status } = payload;\n\n    yield call(onUpdateData , id , status);\n    yield call(onRetriveData);\n\n    if(arrData) {\n        yield put(\n            actions.onFetchDataSuccess(\n                arrData\n            )\n        );\n    }\n}\nconst onEditData = (id, value) => {\n    db.collection('todo').doc(id)\n        .update({task:value}).then(function () {\n\n    }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n    });\n}\n\nfunction* editData({payload}) {\n    const { id, value } = payload;\n\n\n\n    yield call(onEditData , id , value);\n    yield call(onRetriveData);\n\n    if(arrData) {\n        yield put(\n            actions.onFetchDataSuccess(\n                arrData\n            )\n        );\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actions.FETCH_DATA, fetchData)]);\n    yield all([takeEvery(actions.ADD_DATA, addData)]);\n    yield all([takeEvery(actions.DELETE_DATA, deleteData)]);\n    yield all([takeEvery(actions.UPDATE_DATA, updateData)]);\n    yield all([takeEvery(actions.EDIT_DATA, editData)]);\n\n}","import { all } from 'redux-saga/effects';\n\nimport todoSagas from './todo/saga';\n\nexport default function* rootSaga(getState) {\n    yield all([\n        todoSagas()\n    ]);\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport creataSagaMiddleware from 'redux-saga';\nimport reducers from '../redux/reducers';\nimport rootSaga from '../redux/sagas';\n\nconst sagaMiddleware =  creataSagaMiddleware();\nconst middlewares =  [ sagaMiddleware ];\n\nconst store = createStore(\n    combineReducers({\n        ...reducers,\n    }),\n    compose(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\nexport {store};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../redux/todo/action';\nimport TodoReducer from '../redux/todo/reducer';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst { fetchData,addData,deleteData,updateData,editData } = actions;\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            task:'',\n            id:'',\n            value:''\n        };\n        this.addTask = this.addTask.bind(this);\n        this.onTextChange = this.onTextChange.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n        this.updateTask = this.updateTask.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    async openModal(v,i) {\n       await this.setState({modalIsOpen: true,task: v,id:i});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        // this.subtitle.style.color = '#f00';\n    }\n\n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n\n    componentWillMount() {\n        this.props.fetchData();\n    }\n\n    // componentDidMount(){\n    //     setTimeout(res=>{\n    //         this.props.fetchData();\n    //     },1000)\n    // }\n\n    updateStatus = (id,status) => {\n        this.props.updateData(id,status);\n    }\n    updateTask = (id,value) => {\n        this.props.editData(id,value);\n        this.closeModal();\n    }\n    deleteTask = (id ) => {\n        this.props.deleteData(id);\n    }\n    addTask(){\n        if(this.state.value !== '' ){\n            var status = '0';\n            this.props.addData(this.state.value,status);\n        }\n        else {\n            alert(\"Plz add Task\");\n        }\n        this.setState({value:''});\n    }\n    onTextChange = async (e) => {\n        await this.setState({value:e.target.value});\n\n    }\n        render() {\n        const { TodoResult } = this.props;\n        const { result } = TodoResult;\n        const data = result.map((val,id) => {\n           return <tr>\n               { val.status == '0' ?\n                   <td><i className=\"fa fa-check text-secondary\" aria-hidden=\"true\" onClick= {() => this.updateStatus(val.id,val.status)}></i></td>:\n                   <td><i className=\"fa fa-check-square-o text-success\" aria-hidden=\"true\" onClick= {() => this.updateStatus(val.id,val.status)}></i></td>\n               }\n\n               <td> <i onClick= {() => this.openModal(val.task,val.id)}>{val.status == '0' ? <p>{val.task}</p> : <strike>{val.task}</strike>}</i></td>\n               <td><i style={{color:'red'}} className=\"fa fa-times-circle-o\" aria-hidden=\"true\" onClick= {() => this.deleteTask(val.id)}></i></td>\n           </tr>\n        })\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1>TODO LIST</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\" style={{ marginTop: '15px'}}>\n                            <input type='text' placeholder='Add Task' value={this.state.value} onChange={(e) => this.onTextChange(e)}  />\n                            <button style={{ padding: '3px 8px', marginBottom: '6px', marginLeft: '10px'}} className=\"btn btn-success\" onClick={this.addTask}>Add Task</button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4 offset-md-4\">\n                            <table className=\"table text-center\">\n                                    <tr>\n                                        <th></th>\n                                        <th>Tasks</th>\n                                        <th></th>\n                                    </tr>\n                                {data}\n                            </table>\n                        </div>\n                    </div>\n                    <Modal\n                        isOpen={this.state.modalIsOpen}\n                        onAfterOpen={this.afterOpenModal}\n                        style={customStyles}\n                        contentLabel=\"Example Modal\"\n                    >\n                       <i style={{float: 'right', marginTop: '-12px',color:'red'}} className=\"fa fa-times-circle-o\" aria-hidden=\"true\" onClick={this.closeModal}></i>\n                        <h4>Update Task</h4>\n                            <input type=\"text\" value={this.state.task} onChange ={(e) => this.setState({task:e.target.value})}/>\n                            <button style={{ padding: '3px 8px', marginLeft: '10px'}} className=\"btn btn-success\" onClick= {() => this.updateTask(this.state.id,this.state.task)}>Update</button>\n                    </Modal>\n\n                </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return { TodoResult: state.TodoReducer,}\n}\nexport default connect(\n    mapStateToProps,\n    { fetchData,addData,deleteData,updateData,editData}\n)(Todo);","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { store } from '../src/redux/store';\nimport Todo from '../src/component/todo';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Provider store={store}>\n              <Todo/>\n          </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}